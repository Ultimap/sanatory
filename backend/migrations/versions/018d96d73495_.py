"""empty message

Revision ID: 018d96d73495
Revises: 
Create Date: 2023-12-07 17:47:15.421281

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '018d96d73495'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Medcard',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('unique_key', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('unique_key')
    )
    op.create_table('Role',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('Specialization',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('Diagnosis',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('medcard_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['medcard_id'], ['Medcard.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('MedcardEntries',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('medcard_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['medcard_id'], ['Medcard.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('User',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['Role.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('Doctor',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('FML', sa.String(), nullable=False),
    sa.Column('img', sa.String(), nullable=True),
    sa.Column('experience', sa.Integer(), nullable=True),
    sa.Column('specialization_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['specialization_id'], ['Specialization.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('Parent',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('FML', sa.String(), nullable=False),
    sa.Column('contact', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('Procedures',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('diagnosis_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['diagnosis_id'], ['Diagnosis.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Child',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('FML', sa.String(), nullable=False),
    sa.Column('img', sa.String(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=False),
    sa.Column('medcard_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['medcard_id'], ['Medcard.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['Parent.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('medcard_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Child')
    op.drop_table('Procedures')
    op.drop_table('Parent')
    op.drop_table('Doctor')
    op.drop_table('User')
    op.drop_table('MedcardEntries')
    op.drop_table('Diagnosis')
    op.drop_table('Specialization')
    op.drop_table('Role')
    op.drop_table('Medcard')
    # ### end Alembic commands ###
